# Tell Travis CI we're using PHP
language: php

# Opt to use Travis container-based environment.
sudo: false

# PHP version used in first build configuration.
php:
    - "7.1"

# WordPress version used in first build configuration.
env:
    - WP_VERSION=latest

# Newer versions like trusty don't have PHP 5.2 or 5.3
# https://blog.travis-ci.com/2017-07-11-trusty-as-default-linux-is-coming
dist: precise

# Next we define our matrix of additional build configurations to test against.
# The versions listed above will automatically create our first configuration,
# so it doesn't need to be re-defined below.

# WP_VERSION specifies the tag to use. The way these tests are configured to run
# requires at least WordPress 3.8. Specify "latest" to test against SVN trunk.

# Note that Travis CI supports listing these above to automatically build a
# matrix of configurations, but we're being nice here by manually building a
# total of four configurations even though we're testing 4 versions of PHP
# along with 2 versions of WordPress (which would build 8 configs otherwise).
# This takes half as long to run while still providing adequate coverage.

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - node_modules
    - vendor
    - $HOME/phpunit-bin

matrix:
  include:
   - php: "5.2"
     env: WP_VERSION=latest DEV_LIB_SKIP=phpcs
   - php: "5.2"
     env: WP_VERSION=4.7 DEV_LIB_SKIP=phpcs
   - php: "5.3"
     env: WP_VERSION=latest DEV_LIB_SKIP=phpcs
   - php: "5.3"
     env: WP_VERSION=4.7 DEV_LIB_SKIP=phpcs
   - php: "5.4"
     env: WP_VERSION=latest
   - php: "5.4"
     env: WP_VERSION=4.7
   - php: "7.0"
     env: WP_VERSION=latest
   - php: "7.0"
     env: WP_VERSION=4.7
     # 7.1 / latest already included above as first build.
   - php: "7.1"
     env: WP_VERSION=4.7

install:
  - nvm install 6 && nvm use 6
  - export DEV_LIB_PATH=dev-lib
  - source $DEV_LIB_PATH/travis.install.sh

script:
  - source $DEV_LIB_PATH/travis.script.sh

after_script:
  - source $DEV_LIB_PATH/travis.after_script.sh
